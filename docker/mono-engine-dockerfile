FROM rust:bookworm AS builder

WORKDIR /opt/mega

# build args, to specify the build type, release or debug
ARG BUILD_TYPE=release

# check arg value
RUN if [ "$BUILD_TYPE" != "release" ] && [ "$BUILD_TYPE" != "debug" ]; then \
        echo "Invalid BUILD_TYPE: $BUILD_TYPE, must be release or debug"; \
        exit 1; \
    fi

# set mirror for apt
# RUN echo "deb http://mirrors.ustc.edu.cn/debian bookworm main contrib non-free" > /etc/apt/sources.list && \
#     echo "deb http://mirrors.ustc.edu.cn/debian-security bookworm-security main contrib non-free" >> /etc/apt/sources.list && \
#     echo "deb http://mirrors.ustc.edu.cn/debian bookworm-updates main contrib non-free" >> /etc/apt/sources.list

RUN apt-get update && apt-get install -y \
    libssl-dev \
    ca-certificates \
    clang
# copy the source code, the context must be the root of the project
COPY . .

# build
RUN if [ "$BUILD_TYPE" = "release" ]; then \
    cargo build --release -p mono -p libra; \
else \
    cargo build -p mono -p libra; \
fi

# final image
FROM debian:bookworm-slim

RUN apt-get update && apt-get install -y libssl-dev ca-certificates less

ARG BUILD_TYPE=release

COPY --from=builder /opt/mega/target/$BUILD_TYPE/mono /usr/local/bin/mono
COPY --from=builder /opt/mega/target/$BUILD_TYPE/libra /usr/local/bin/libra

COPY --from=builder /opt/mega/docker/start-mono.sh /usr/local/bin/start-mono.sh
RUN chmod +x /usr/local/bin/start-mono.sh
RUN chmod +x /usr/local/bin/mono

VOLUME /opt/mega

CMD ["bash", "-c", "/usr/local/bin/start-mono.sh"]
