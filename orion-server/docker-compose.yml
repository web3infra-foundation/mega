version: '3.8'

services:
  app:
    build:
      context: ../
      dockerfile: orion-server/Dockerfile
    container_name: orion-server
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db/orion
      - PORT=8004
      - BUILD_LOG_DIR=/tmp/buck2ctl
    depends_on:
      db:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orion
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db-init:
    image: postgres:15
    container_name: orion-db-init
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./db/schema.sql:/schema.sql:ro
    entrypoint: ["sh", "-lc"]
    command: |
      set -euo pipefail
      echo "[db-init] Waiting for Postgres to be ready..."
      until pg_isready -h db -p 5432 -U postgres >/dev/null 2>&1; do echo -n "."; sleep 1; done
      echo " OK"

      if ! psql -h db -p 5432 -U postgres -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='orion'" | grep -q 1; then
        echo "[db-init] Creating database 'orion'..."
        psql -h db -p 5432 -U postgres -d postgres -v ON_ERROR_STOP=1 -c "CREATE DATABASE orion"
      else
        echo "[db-init] Database 'orion' already exists."
      fi

      echo "[db-init] Applying schema to 'orion'..."
      psql -h db -p 5432 -U postgres -d orion -v ON_ERROR_STOP=1 -f /schema.sql
      echo "[db-init] Schema applied."
    restart: "no"

volumes:
  pgdata: