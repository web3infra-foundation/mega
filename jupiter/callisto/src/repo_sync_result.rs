//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use super::sea_orm_active_enums::CrateTypeEnum;
use super::sea_orm_active_enums::SyncStatusEnum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "repo_sync_result")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub crate_name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub github_url: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub mega_url: String,
    pub status: SyncStatusEnum,
    pub crate_type: CrateTypeEnum,
    #[sea_orm(column_type = "Text", nullable)]
    pub err_message: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub version: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
