//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "conv_type_enum")]
pub enum ConvTypeEnum {
    #[sea_orm(string_value = "comment")]
    Comment,
    #[sea_orm(string_value = "deploy")]
    Deploy,
    #[sea_orm(string_value = "commit")]
    Commit,
    #[sea_orm(string_value = "force_push")]
    ForcePush,
    #[sea_orm(string_value = "edit")]
    Edit,
    #[sea_orm(string_value = "review")]
    Review,
    #[sea_orm(string_value = "approve")]
    Approve,
    #[sea_orm(string_value = "merge_queue")]
    MergeQueue,
    #[sea_orm(string_value = "merged")]
    Merged,
    #[sea_orm(string_value = "closed")]
    Closed,
    #[sea_orm(string_value = "reopen")]
    Reopen,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "merge_status_enum")]
pub enum MergeStatusEnum {
    #[sea_orm(string_value = "open")]
    Open,
    #[sea_orm(string_value = "merged")]
    Merged,
    #[sea_orm(string_value = "closed")]
    Closed,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ref_type_enum")]
pub enum RefTypeEnum {
    #[sea_orm(string_value = "branch")]
    Branch,
    #[sea_orm(string_value = "tag")]
    Tag,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "storage_type_enum")]
pub enum StorageTypeEnum {
    #[sea_orm(string_value = "database")]
    #[serde(rename = "database")]
    Database,
    #[sea_orm(string_value = "local_fs")]
    #[serde(rename = "local_fs")]
    LocalFs,
    #[sea_orm(string_value = "aws_s3")]
    #[serde(rename = "aws_s3")]
    AwsS3,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "crate_type_enum")]
pub enum CrateTypeEnum {
    #[sea_orm(string_value = "lib")]
    Lib,
    #[sea_orm(string_value = "application")]
    Application,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "sync_status_enum")]
pub enum SyncStatusEnum {
    #[sea_orm(string_value = "syncing")]
    Syncing,
    #[sea_orm(string_value = "succeed")]
    Succeed,
    #[sea_orm(string_value = "failed")]
    Failed,
    #[sea_orm(string_value = "analysing")]
    Analysing,
    #[sea_orm(string_value = "analysed")]
    Analysed,
}
