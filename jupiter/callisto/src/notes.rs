//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "notes")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(unique)]
    pub public_id: String,
    pub comments_count: i32,
    pub discarded_at: Option<DateTime>,
    pub organization_membership_id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub description_html: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description_state: Option<String>,
    pub description_schema_version: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub title: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub original_project_id: Option<i64>,
    pub original_post_id: Option<i64>,
    pub original_digest_id: Option<i64>,
    pub visibility: i32,
    pub non_member_views_count: i32,
    pub resolved_comments_count: Option<i32>,
    pub project_id: Option<i64>,
    pub last_activity_at: Option<DateTime>,
    pub content_updated_at: Option<DateTime>,
    pub project_permission: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
