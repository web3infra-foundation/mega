# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# History:
#   1. 2023-02-14: Created at 2023-02-14T16:00:00Z by Quanyi Ma <eli@patch.sh>
#   2. 2024-05-07: Update the `fuse` job to install `fuse3` and `libfuse3-dev` at 2024-05-07T16:00:00Z by Xiaoyang Han <lux1an216@gmail.com>
#   3. 2025-02-27: Reconstruct the workflow and add `install-dep` action to support test on multiple platforms by Neon <yyk1249501542@gmail.com>
#

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'alfs/**'
      - 'archived/**'
      - 'aries/**'
      - 'congig/**'
      - 'docker/**'
      - 'docs/**'
      - 'moon/**'
      - 'rust/**'
      - 'scripts/**'
      - 'third-party/**'
      - 'toolchains/**'

name: Base GitHub Action for Check, Test and Lints

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # cache files before all jobs
  setup:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    name: Setup and cache ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy rustfmt
          cache-workspaces: |
            ./
            ./scorpio
            ./monobean
          cache-directories: |
            ./target
            ./scorpio/target
            ./monobean/target

  #
  format:
    name: Rustfmt Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: cargo fmt --all -- --check

  #
  clippy:
    name: Clippy for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/install-dep
        with:
          cache-key: sysdeps
          platform: ${{ matrix.os }}

      - name: Run cargo clippy
        run: |
          cargo build --bin mega --bin libra
          cargo clippy --workspace --all-targets --all-features --no-deps -- -D warnings

  #
  test:
    name: Full Test
    runs-on: self-hosted
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          cache-workspaces: |
            ./
          cache-directories: |
            ./target

      - name: Set up git lfs
        run: |
          echo "GPG_TTY=`tty`" >> $GITHUB_ENV
          git lfs install
          git config --global user.email "mega@github.com"
          git config --global user.name "Mega"
          git config --global lfs.url http://localhost:8000

      - name: Run cargo test
        run: |
          cargo build --bin mega --bin libra
          cargo test --workspace --all-features --no-fail-fast

  #
  monobean:
    name: Test Monobean for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/install-dep
        with:
          cache-key: sysdeps
          platform: ${{ matrix.os }}

      - name: Run Lints
        run: |
          cargo clippy --manifest-path monobean/Cargo.toml --no-deps -- -D warnings
          cargo test --manifest-path monobean/Cargo.toml  --all-features --no-fail-fast -- --nocapture

  #
  fuse:
    name: Fuse Lints
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo clippy --manifest-path scorpio/Cargo.toml --all-targets --all-features -- -D warnings
